field x: Ref
inline predicate has_x(r: Ref) {
    acc(r.x)
}

inline predicate has_x2(r: Ref) {
    acc(has_x(r), 1/2) && has_x(unfolding acc(has_x(r), 1/2) in r.x)
}

method test(r: Ref)
requires has_x2(r) {
    unfold has_x2(r)
    unfold acc(has_x(r), 1/2)
    unfold has_x(r.x)
    r.x.x := null
}